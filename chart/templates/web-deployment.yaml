apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ReactiveSQL.fullname" . }}-web
  labels:
    component: web
{{ include "ReactiveSQL.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount.web }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ReactiveSQL.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      component: web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "ReactiveSQL.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: web
    spec:
      terminationGracePeriodSeconds: 1
      containers:
        - name: {{ .Chart.Name }}-web
          #image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          image: "{{ .Values.image.repository }}:1.0"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: CELERY_BROKER
              value: "redis://myrx-reactivesql-redis:6379/0"
            - name: CELERY_BACKEND
              value: "redis://myrx-reactivesql-redis:6379/0"
            - name: WEB_SERVICE
              value: "myrx-reactivesql-web:8000"
          command: ["uvicorn"]
          args:
            - 'app.web:app'
            - '--workers'
            - '4'
            - '--port'
            - '8000'
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /ping
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /ping
#              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
